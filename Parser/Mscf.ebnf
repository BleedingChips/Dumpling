_IGNORE := '\s+|/\*.*?\*/|//.*?\n'
Code := '@\{[.\n]*?\}@' : [3]
FloatNumber := '-?[0-9]+\.[0-9]+' : [0]
IntNumber := '-?[1-9][0-9]*' : [1]
String := '".*?[^\\]"|""' : [2]
Id := '[a-zA-Z_][a-zA-Z_0-9]*'

%%%

$ := <Statement>

<Statement> := <PropertyStatement> : [1]
    := <Statement> ';' : [2]
    := : [3]

<BaseConstValue> := IntNumber | FloatNumber | String : [4]
    := 'true' : [5]
    := 'false' : [6]
    := Id '(' [ <BaseConstValue> {',' <BaseConstValue> } ] ')' : [7]

<ArrayProperty> := '[' ']' : [8]
    := <ArrayProperty> '[' IntNumber ']' : [9]
    :=  : [10]

<DefineVariable> := Id [ '<' Id '>' ] Id <ArrayProperty> [ '=' <BaseConstValue> ] : [11]

<StructDesc> := 'struct' Id '{' { <DefineVariable> ';' | ';' } '}' ';' : [12]

<MateDateElement> := Id [ '=' <BaseConstValue> ] : [13]

<MateDate> := [ '[' [<MateDateElement> {',' <MateDateElement> } ] ']' ] : [14]

<PropertyDefine> := <PropertyDefine> <MateDate> '{' { <MateDate>  <DefineVariable> } '}' : [15]
    := <PropertyDefine> <MateDate> <DefineVariable> ';' : [16]
    := <PropertyDefine> <StructDesc> : [17]
    :=  : [18]

<PropertyStatement> := 'property' '{' <PropertyDefine> '}' : [19]

/*

<DefineProperty> := <MateDate> <Type> Id { '[' IntNumber ']' } [ '=' <ConstNumber>  ]

<DefinePropertyStatement> := <DefinePropertyStatement> <DefineProperty> ';'
    := <DefinePropertyStatement> <MateDate> '{' <DefinePropertyStatement> '}'
    := 
    := <DefinePropertyStatement> ';'

<ImportStatement> := 'import' String 'as' Id ';'

<PropertyStatement> := 'property' '{' <DefinePropertyStatement>  '}' ';'

<IncludeElement> := Id
    := <IncludeElement> '.' Id

<IncludeElementList> := <IncludeElement>
    := <IncludeElementList> ',' <IncludeElement>

<Include> := '[' <IncludeElementList> ']'
    := '[' ']'
    :=

<CodeStatement> := 'code' Id <Include> Code ';'

<Conflig> := '<' <MateDateElementList> '>'
    := '<' '>'

<InOutFlag> := 'in'
    := 'out'
    :=

<InoutElementList> := <InOutFlag> 'in' <NumberType> Id
    := <InoutElementList> ',' <InOutFlag> <NumberType> Id

<SectionStatement> := 'section' Id <Include> '(' [<InoutElementList>] ')' Code ';'

<DefineMarcoStatement> := 'define' Id String ';'
    := 'define' Id ';'

<MaterialStatementElement> := <MaterialStatementElement> <SectionStatement>
    := <MaterialStatementElement> <DefineMarcoStatement>
    := 

<MaterialStatement> := <NullableMateData> 'material' Id 'as' Id <Conflig> '{' <MaterialStatementElement> '}' ';'
    := <NullableMateData> 'using' 'material' <IncludeElement> 'as' Id <Conflig> ';'



<StatemenetElement> :=  <StatemenetElement> <ImportStatement>
    := <StatemenetElement> <CodeStatement>
    := <StatemenetElement> <MaterialStatement> 
    := 

<Statement> := <StatemenetElement>
    := <PropertyStatement> <StatemenetElement>

*/


